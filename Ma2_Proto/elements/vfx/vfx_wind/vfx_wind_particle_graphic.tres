[gd_resource type="VisualShader" load_steps=17 format=3 uid="uid://0b7j76n8q741"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_t0hyi"]
input_name = "uv"

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_p4pcm"]
parameter_name = "rows"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_p4pcm"]
size = Vector2(500, 220)
expression = "lifetime = vector.y;
velocityX = vector.x;"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_t0hyi"]
parameter_name = "gradient_time"
color_default = 1
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pywhb"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_t0hyi"]
size = Vector2(540, 440)
expression = "if (velocityX < 0.0){
	uv_corrected.x = 1.0 - uv.x;
}
else {
	uv_corrected.x = uv.x;
}
uv_corrected.y = uv.y;"

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_p4pcm"]
varying_name = "custom_particle"
varying_type = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_p4pcm"]
parameter_name = "main_tex"
color_default = 1
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_t0hyi"]
output_port_for_preview = 0
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeIntParameter" id="VisualShaderNodeIntParameter_pywhb"]
parameter_name = "columns"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_lfo4v"]
size = Vector2(500, 400)
expression = "float row = min(rows - 1.0, floor(lifetime * rows));
float column = floor(lifetime * rows * columns);
column = min(columns - 1.0, mod(column, columns));

out_uv.x = clamp((uv.x + column) / columns, 0.0, 1.0);
out_uv.y = clamp((uv.y + row) / rows, 0.0, 1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pywhb"]
input_name = "instance_custom"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lfo4v"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_xfki5"]
size = Vector2(680, 260)
expression = "out_v = in_v * 0.5;"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_pywhb"]
parameter_name = "main_tex2"
color_default = 1
texture_filter = 1

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_p4pcm"]
varying_name = "custom_particle"
varying_type = 5

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, shadows_disabled;


// Varyings
varying vec4 var_custom_particle;

uniform sampler2D gradient_time : hint_default_black, filter_nearest;
uniform int columns;
uniform int rows;
uniform sampler2D main_tex : hint_default_black, filter_nearest;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


	vec3 n_out4p0;
// Expression:4
	n_out4p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out4p0 = n_out3p0 * 0.5;
	}


// Output:0
	VERTEX = n_out4p0;


// Input:2
	vec4 n_out2p0 = INSTANCE_CUSTOM;


// VaryingSetter:6
	var_custom_particle = n_out2p0;


}

void fragment() {
// VaryingGetter:17
	vec4 n_out17p0 = var_custom_particle;


	float n_out13p0;
	float n_out13p1;
// Expression:13
	n_out13p0 = 0.0;
	n_out13p1 = 0.0;
	{
		n_out13p0 = n_out17p0.y;
		n_out13p1 = n_out17p0.x;
	}


	vec4 n_out15p0;
// Texture2D:15
	n_out15p0 = texture(gradient_time, vec2(n_out13p0));
	float n_out15p1 = n_out15p0.r;


// IntParameter:8
	int n_out8p0 = columns;


// IntParameter:12
	int n_out12p0 = rows;


// Input:10
	vec2 n_out10p0 = UV;


	vec2 n_out16p0;
// Expression:16
	n_out16p0 = vec2(0.0, 0.0);
	{
		if (n_out13p1 < 0.0){
			n_out16p0.x = 1.0 - n_out10p0.x;
		}
		else {
			n_out16p0.x = n_out10p0.x;
		}
		n_out16p0.y = n_out10p0.y;
	}


	vec2 n_out9p0;
// Expression:9
	n_out9p0 = vec2(0.0, 0.0);
	{
		float row = min(float(n_out12p0) - 1.0, floor(n_out15p1 * float(n_out12p0)));
		float column = floor(n_out15p1 * float(n_out12p0) * float(n_out8p0));
		column = min(float(n_out8p0) - 1.0, mod(column, float(n_out8p0)));
		
		n_out9p0.x = clamp((n_out16p0.x + column) / float(n_out8p0), 0.0, 1.0);
		n_out9p0.y = clamp((n_out16p0.y + row) / float(n_out12p0), 0.0, 1.0);
	}


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(main_tex, n_out9p0);
	float n_out7p4 = n_out7p0.a;


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out7p4;


}
"
modes/cull = 2
flags/shadows_disabled = true
varyings/custom_particle = "0,5"
nodes/vertex/0/position = Vector2(780, 120)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_pywhb")
nodes/vertex/2/position = Vector2(-220, 360)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_lfo4v")
nodes/vertex/3/position = Vector2(-580, -20)
nodes/vertex/4/node = SubResource("VisualShaderNodeExpression_xfki5")
nodes/vertex/4/position = Vector2(-40, 40)
nodes/vertex/4/size = Vector2(680, 260)
nodes/vertex/4/input_ports = "0,4,in_v;"
nodes/vertex/4/output_ports = "0,4,out_v;"
nodes/vertex/4/expression = "out_v = in_v * 0.5;"
nodes/vertex/5/node = SubResource("VisualShaderNodeTexture2DParameter_pywhb")
nodes/vertex/5/position = Vector2(-1060, 120)
nodes/vertex/6/node = SubResource("VisualShaderNodeVaryingSetter_p4pcm")
nodes/vertex/6/position = Vector2(500, 360)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 0, 0, 2, 0, 6, 0)
nodes/fragment/0/position = Vector2(1120, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_p4pcm")
nodes/fragment/6/position = Vector2(40, 220)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_t0hyi")
nodes/fragment/7/position = Vector2(540, 160)
nodes/fragment/8/node = SubResource("VisualShaderNodeIntParameter_pywhb")
nodes/fragment/8/position = Vector2(-1420, -40)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_lfo4v")
nodes/fragment/9/position = Vector2(-40, -300)
nodes/fragment/9/size = Vector2(500, 400)
nodes/fragment/9/input_ports = "0,0,lifetime;1,0,columns;2,0,rows;3,3,uv;"
nodes/fragment/9/output_ports = "0,3,out_uv;"
nodes/fragment/9/expression = "float row = min(rows - 1.0, floor(lifetime * rows));
float column = floor(lifetime * rows * columns);
column = min(columns - 1.0, mod(column, columns));

out_uv.x = clamp((uv.x + column) / columns, 0.0, 1.0);
out_uv.y = clamp((uv.y + row) / rows, 0.0, 1.0);"
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_t0hyi")
nodes/fragment/10/position = Vector2(-1540, 400)
nodes/fragment/12/node = SubResource("VisualShaderNodeIntParameter_p4pcm")
nodes/fragment/12/position = Vector2(-1500, 180)
nodes/fragment/13/node = SubResource("VisualShaderNodeExpression_p4pcm")
nodes/fragment/13/position = Vector2(-1980, -600)
nodes/fragment/13/size = Vector2(500, 220)
nodes/fragment/13/input_ports = "0,5,vector;"
nodes/fragment/13/output_ports = "0,0,lifetime;1,0,velocityX;"
nodes/fragment/13/expression = "lifetime = vector.y;
velocityX = vector.x;"
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture2DParameter_t0hyi")
nodes/fragment/14/position = Vector2(-1960, -220)
nodes/fragment/15/node = SubResource("VisualShaderNodeTexture_pywhb")
nodes/fragment/15/position = Vector2(-1380, -380)
nodes/fragment/16/node = SubResource("VisualShaderNodeExpression_t0hyi")
nodes/fragment/16/position = Vector2(-860, -660)
nodes/fragment/16/size = Vector2(540, 440)
nodes/fragment/16/input_ports = "0,0,velocityX;1,3,uv;"
nodes/fragment/16/output_ports = "0,3,uv_corrected;"
nodes/fragment/16/expression = "if (velocityX < 0.0){
	uv_corrected.x = 1.0 - uv.x;
}
else {
	uv_corrected.x = uv.x;
}
uv_corrected.y = uv.y;"
nodes/fragment/17/node = SubResource("VisualShaderNodeVaryingGetter_p4pcm")
nodes/fragment/17/position = Vector2(-2380, -560)
nodes/fragment/connections = PackedInt32Array(6, 0, 7, 2, 8, 0, 9, 1, 7, 0, 0, 0, 12, 0, 9, 2, 7, 4, 0, 1, 13, 0, 15, 0, 14, 0, 15, 2, 15, 1, 9, 0, 13, 1, 16, 0, 10, 0, 16, 1, 16, 0, 9, 3, 9, 0, 7, 0, 17, 0, 13, 0)
